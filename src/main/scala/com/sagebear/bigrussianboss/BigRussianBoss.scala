package com.sagebear.bigrussianboss

import com.sagebear.bigrussianboss.Script._
import com.sagebear.bigrussianboss.bot.{Cli, RuleBased, ReturnRuleBased}
import com.sagebear.bigrussianboss.intent.Intents._

import scala.concurrent.Await
import scala.concurrent.ExecutionContext.Implicits.global
import scala.concurrent.duration._
import scala.language.postfixOps

object BigRussianBoss extends App {
  private val script = примеры(
   Пример(
      Клиент приветствует,
      Оператор приветствует,
      Клиент спрашивает Вопрос_про_покупку_пива,
      Оператор спрашивает Вопрос_про_адрес,
      Клиент говорит Информацию_про_свой_адрес,
      Оператор говорит Информацию_где_купить_пиво,
      Оператор прощается,
      Клиент прощается
    ),
    Пример(
      Клиент приветствует,
      Оператор приветствует,
      Клиент спрашивает Вопрос_про_покупку_пива,
      Оператор спрашивает (Вопрос_про_телефон и Вопрос_про_адрес),
      Клиент говорит Информацию_про_свой_адрес,
      Оператор спрашивает Вопрос_про_телефон,
      Клиент говорит Глупости,
      Оператор спрашивает Вопрос_про_телефон,
      Клиент говорит Информацию_про_свой_телефон,
      Оператор говорит Информацию_где_купить_пиво,
      Оператор прощается,
      Клиент прощается
    )
  )

  private val returnScript = примеры(
    Пример(
      Клиент приветствует,
      Оператор приветствует,
      Клиент говорит Информацию_про_цель_визита,
      Оператор спрашивает Вопрос_про_место_покупки_товара,
      Клиент говорит Информацию_место_покупки_магазин,
      Оператор спрашивает Вопрос_устраивает_ли_качество_товара,
      Клиент говорит Нет,
      Оператор спрашивает Вопрос_является_ли_технически_сложным_товаром,
      Клиент говорит Нет,
      Оператор говорит Информацию_о_возврате_технически_сложного_товара,
      Клиент прощается,
      Оператор прощается,
    ),
    Пример(
      Клиент приветствует,
      Оператор приветствует,
      Клиент говорит Информацию_про_цель_визита,
      Оператор спрашивает Вопрос_про_место_покупки_товара,
      Клиент говорит Информацию_место_покупки_магазин,
      Оператор спрашивает Вопрос_устраивает_ли_качество_товара,
      Клиент говорит Нет,
      Оператор спрашивает Вопрос_является_ли_технически_сложным_товаром,
      Клиент говорит Нет,
      Оператор говорит Информацию_о_возврате_технически_не_сложного_товара,
      Клиент прощается,
      Оператор прощается,
    ),
    Пример(
      Клиент приветствует,
      Оператор приветствует,
      Клиент говорит Информацию_про_цель_визита,
      Оператор спрашивает Вопрос_про_место_покупки_товара,
      Клиент говорит Информацию_место_покупки_магазин,
      Оператор спрашивает Вопрос_устраивает_ли_качество_товара,
      Клиент говорит Да,
      Оператор говорит Информацию_о_возврате_товара_когда_устраивает_качество,
      Клиент прощается,
      Оператор прощается,
    ),
    Пример(
      Клиент приветствует,
      Оператор приветствует,
      Клиент говорит Информацию_про_цель_визита,
      Оператор спрашивает Вопрос_про_место_покупки_товара,
      Клиент говорит Информацию_место_покупки_онлайн,
      Оператор говорит Информацию_место_покупки_онлайн,
      Клиент прощается,
      Оператор прощается,
    )
  )


  private val client = ReturnRuleBased.client.get
  private val operator = ReturnRuleBased.operator.get

  println(Await.result(returnScript.execute(client, operator), 1.hour))
}
